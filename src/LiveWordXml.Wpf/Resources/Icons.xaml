<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- Modern Icon Styles -->
    <Style x:Key="IconTextStyle"
            TargetType="TextBlock">
        <Setter Property="FontFamily"
                Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize"
                Value="16"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
    </Style>

    <!-- Icon Definitions using Segoe MDL2 Assets -->
    <sys:String x:Key="FolderIcon">&#xE8B7;</sys:String>
    <sys:String x:Key="DocumentIcon">&#xE8A5;</sys:String>
    <sys:String x:Key="RefreshIcon">&#xE72C;</sys:String>
    <sys:String x:Key="SearchIcon">&#xE721;</sys:String>
    <sys:String x:Key="CopyIcon">&#xE8C8;</sys:String>
    <sys:String x:Key="SaveIcon">&#xE74E;</sys:String>
    <sys:String x:Key="ExpandIcon">&#xE70D;</sys:String>
    <sys:String x:Key="CollapseIcon">&#xE70E;</sys:String>
    <sys:String x:Key="PreviousIcon">&#xE76B;</sys:String>
    <sys:String x:Key="NextIcon">&#xE76C;</sys:String>
    <sys:String x:Key="TargetIcon">&#xE8B3;</sys:String>
    <sys:String x:Key="LocationIcon">&#xE81D;</sys:String>
    <sys:String x:Key="SettingsIcon">&#xE713;</sys:String>
    <sys:String x:Key="InfoIcon">&#xE946;</sys:String>
    <sys:String x:Key="SuccessIcon">&#xE73E;</sys:String>
    <sys:String x:Key="WarningIcon">&#xE7BA;</sys:String>
    <sys:String x:Key="ErrorIcon">&#xE783;</sys:String>

    <!-- App Icon as Vector Drawing -->
    <DrawingImage x:Key="AppIconDrawing">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <!-- Background Circle -->
                <GeometryDrawing Brush="#FF2563EB">
                    <GeometryDrawing.Geometry>
                        <EllipseGeometry Center="64,64"
                                RadiusX="60"
                                RadiusY="60"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <!-- Document Background -->
                <GeometryDrawing Brush="#FFFFFFFF">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="30,25,68,78"
                                RadiusX="4"
                                RadiusY="4"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <!-- XML Content Lines -->
                <GeometryDrawing Brush="#FF6B7280">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="45,55,38,2"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#FF6B7280">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="45,62,28,2"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#FF6B7280">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="45,69,35,2"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <!-- Live Indicator -->
                <GeometryDrawing Brush="#FF10B981">
                    <GeometryDrawing.Geometry>
                        <EllipseGeometry Center="90,35"
                                RadiusX="6"
                                RadiusY="6"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#FFFFFFFF">
                    <GeometryDrawing.Geometry>
                        <EllipseGeometry Center="90,35"
                                RadiusX="3"
                                RadiusY="3"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!-- Modern Button with Icon Template -->
    <ControlTemplate x:Key="IconButtonTemplate"
            TargetType="Button">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                           Text="{TemplateBinding Tag}"
                           Style="{StaticResource IconTextStyle}"
                           Margin="0,0,8,0"
                           Visibility="{TemplateBinding Tag, Converter={StaticResource NullToVisibilityConverter}}"/>

                <ContentPresenter Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                    Value="True">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{StaticResource SurfaceVariantBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed"
                    Value="True">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{StaticResource BorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Status Indicator Styles -->
    <Style x:Key="StatusIndicatorStyle"
            TargetType="Border">
        <Setter Property="Width"
                Value="8"/>
        <Setter Property="Height"
                Value="8"/>
        <Setter Property="CornerRadius"
                Value="4"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
    </Style>

    <!-- Progress Ring Style -->
    <Style x:Key="ModernProgressRingStyle"
            TargetType="ProgressBar">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness"
                Value="0"/>
        <Setter Property="Height"
                Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Ellipse Stroke="{StaticResource BorderBrush}"
                                 StrokeThickness="2"
                                 Width="20"
                                 Height="20"/>
                        <Ellipse x:Name="PART_Indicator"
                                 Stroke="{TemplateBinding Foreground}"
                                 StrokeThickness="2"
                                 Width="20"
                                 Height="20"
                                 StrokeDashArray="31.416"
                                 StrokeDashOffset="31.416"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <RotateTransform x:Name="RotateTransform"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate"
                                Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         From="0"
                                                         To="360"
                                                         Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card Hover Animation -->
    <Style x:Key="AnimatedCardStyle"
            TargetType="Border"
            BasedOn="{StaticResource ModernCardStyle}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                    Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                             To="-2"
                                             Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)"
                                             To="4"
                                             Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)"
                                             To="12"
                                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                             To="0"
                                             Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)"
                                             To="2"
                                             Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)"
                                             To="8"
                                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Notification Styles -->
    <Style x:Key="NotificationStyle"
            TargetType="Border">
        <Setter Property="Background"
                Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="CornerRadius"
                Value="6"/>
        <Setter Property="Padding"
                Value="16,12"/>
        <Setter Property="Margin"
                Value="8"/>
        <Setter Property="Effect"
                Value="{StaticResource ElevatedShadow}"/>
    </Style>

    <Style x:Key="SuccessNotificationStyle"
            TargetType="Border"
            BasedOn="{StaticResource NotificationStyle}">
        <Setter Property="BorderBrush"
                Value="{StaticResource SuccessBrush}"/>
        <Setter Property="Background"
                Value="#F0F9FF"/>
    </Style>

    <Style x:Key="WarningNotificationStyle"
            TargetType="Border"
            BasedOn="{StaticResource NotificationStyle}">
        <Setter Property="BorderBrush"
                Value="{StaticResource WarningBrush}"/>
        <Setter Property="Background"
                Value="#FFFBF0"/>
    </Style>

    <Style x:Key="ErrorNotificationStyle"
            TargetType="Border"
            BasedOn="{StaticResource NotificationStyle}">
        <Setter Property="BorderBrush"
                Value="{StaticResource ErrorBrush}"/>
        <Setter Property="Background"
                Value="#FFF5F5"/>
    </Style>

</ResourceDictionary>